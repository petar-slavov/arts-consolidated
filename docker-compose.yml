services:
  # Node.js Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: nodejs-app
    restart: unless-stopped
    ports:
      - "${APP_PORT}:${APP_PORT}"
      - "${DEBUG_PORT}:${DEBUG_PORT}"
    environment:
      - NODE_ENV=${NODE_ENV}
      - DB_HOST=mysql
      - DB_USER=${MYSQL_USER}
      - DB_PASSWORD=${MYSQL_PASSWORD}
      - DB_NAME=${MYSQL_DATABASE}
      - ELASTICSEARCH_HOST=http://elasticsearch:${ES_PORT}
    depends_on:
      mysql:
        condition: service_healthy
      elasticsearch:
        condition: service_healthy
    volumes:
      - ./src:/app/src
      - ./package.json:/app/package.json
      - ./tsconfig.json:/app/tsconfig.json
    networks:
      - app-network
    develop:
      watch:
        - action: rebuild
          path: ./src
          ignore:
            - node_modules/
            - dist/
            - .git/
            - .env
            - .env.local

  # MySQL Database
  mysql:
    image: mysql:9.5
    container_name: mysql-db
    restart: unless-stopped
    ports:
      - "${MYSQL_PORT}:${MYSQL_PORT}"
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
    volumes:
      - mysql-data:/var/lib/mysql
      - ./init-db:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${MYSQL_ROOT_PASSWORD}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  # Elasticsearch
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.0
    container_name: elasticsearch
    restart: unless-stopped
    ports:
      - "${ES_PORT}:${ES_PORT}"
      - "${ES_TRANSPORT_PORT}:${ES_TRANSPORT_PORT}"
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9200/_cluster/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  mysql-data:
  elasticsearch-data:

